name: Tests

on:
  push:
    branches: [ main, master, develop ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main, master, develop ]
  workflow_call:  # This allows the workflow to be called by other workflows

jobs:
  test:
    name: Run Tests
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust: [stable]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt, clippy

      - name: Cache Cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Run clippy
        run: cargo clippy --all -- -D warnings

      - name: Build
        run: cargo build --verbose

      - name: Run tests
        run: cargo test --verbose

      - name: Build release
        run: cargo build --release --verbose

      - name: Check that binary runs
        shell: bash
        run: |
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            ./target/release/tameshi-lsp.exe --version
          else
            ./target/release/tameshi-lsp --version
          fi

  # This job is used as a single status check for branch protection
  test-status:
    name: Test Status
    runs-on: ubuntu-latest
    needs: test
    if: always()
    steps:
      - name: Check test results
        run: |
          if [[ "${{ needs.test.result }}" == "success" ]]; then
            echo "All tests passed!"
            exit 0
          else
            echo "Tests failed!"
            exit 1
          fi
